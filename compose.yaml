version: "3.5"
services:
  redis:
    image: redis:alpine
    volumes:
      - "redis:/data"
    restart: unless-stopped
  postgres:
    image: postgres:16-alpine
    volumes:
      - "postgres:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: archyve
      POSTGRES_PASSWORD: password
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U archyve"]
      interval: 5s
      timeout: 5s
      retries: 5
  chromadb:
    image: chromadb/chroma:latest
    volumes:
      - chromadb:/chroma/chroma
    command: "--workers 1 --host 0.0.0.0 --port 8000 --proxy-headers --log-config chromadb/log_config.yml --timeout-keep-alive 30"
    environment:
      - IS_PERSISTENT=TRUE
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
  archyve:
    image: archyve:local
    build: .
    env_file: ./local.env
    restart: unless-stopped
    volumes:
      - archyve_files:/rails/storage
      - ./config/local:/rails/config/local
    # this needs to be edited to give podman access to host
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 3300:3000
    depends_on:
      - redis
      - postgres
  archyve-worker:
    image: archyve:local
    env_file: ./local.env
    restart: unless-stopped
    volumes:
      - archyve_files:/rails/storage
      - ./config/local:/rails/config/local
    # this needs to be edited to give podman access to host
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      [
        "/bin/bash",
        "-c",
        "bin/rails db:migrate && bin/rails neo4j:migrate && bin/rails db:seed && bundle exec sidekiq",
      ]
    depends_on:
      - redis
      - postgres
      - archyve
    environment:
      RUN_SIDEKIQ: true
  neo4j:
    image: neo4j:5.21.0
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=neo4j/password

volumes:
  redis:
  postgres:
  chromadb:
  archyve_files:
  neo4j_data:
